{
  "root": true,
  "ignorePatterns": ["projects/**/*", "src/test.ts", "src/environments/*.ts"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
        // "plugin:functional/external-typescript-recommended",
        // "plugin:functional/recommended",
        // "plugin:functional/stylistic"
      ],
      "plugins": ["@typescript-eslint", "functional"],
      "rules": {
        // TODO: Optional Parameters
        // TODO: Naming convention of methods
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "functional/prefer-immutable-types": [
          "error",
          {
            "enforcement": "ReadonlyShallow"
            // "ignoreTypePattern": ["Observable"] // Readonly<>
          }
        ],
        "functional/type-declaration-immutability": ["error"],
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-explicit-any": "error",
        // TODO: Think if should use it only for components/service - only for Object - Model
        // TODO: Allow only Observables or Subjects
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "classProperty",
            "format": ["camelCase"],
            "suffix": ["$", "Subject"],
            "leadingUnderscore": "allow"
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
